@model TaskManagmentSystem.ViewModels.FullDataWorkSpaceForTeamViewModel

@{
    ViewData["Title"] = $"{Model.Name} - Workspaces";
}

<div class="workspaces-wrapper">
    <div class="container-fluid workspaces-container">
        <!-- Header Section -->
        <div class="workspaces-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="workspaces-title">
                        <i class="bi bi-kanban-fill"></i>
                        @Model.Name
                    </h1>
                    <p class="workspaces-subtitle">@(Model.Workspaces?.Count ?? 0) workspace(s) available</p>
                </div>
                <div class="header-actions">
                    <a asp-controller="Team" asp-action="Details" asp-route-id="@Model.TeamId" class="btn btn-info">
                        <i class="bi bi-info-circle-fill"></i>
                        <span>Team Details</span>
                    </a>
                    <a asp-controller="Team" asp-action="Members" asp-route-id="@Model.TeamId" class="btn btn-members">
                        <i class="bi bi-people-fill"></i>
                        <span>View Members</span>
                    </a>
                    @if (Model.AdminId == Model.UserId)
                    {
                        <a asp-action="Add" asp-route-teamId="@Model.TeamId" class="btn btn-create">
                            <i class="bi bi-plus-circle-fill"></i>
                            <span>Add Workspace</span>
                        </a>
                    }
                    <a asp-controller="Team" asp-action="Show" class="btn btn-back">
                        <i class="bi bi-arrow-left"></i>
                        <span>Back to Teams</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- Workspaces Grid -->
        <div class="workspaces-content">
            @if (Model.Workspaces != null && Model.Workspaces.Any())
            {
                <div class="workspaces-grid">
                    @foreach (var workspace in Model.Workspaces)
                    {
                        <div class="workspace-card @GetColorClass(workspace.Color)">
                            <div class="workspace-header">
                                <div class="workspace-color-indicator @GetColorClass(workspace.Color)"></div>
                                <h4 class="workspace-title">@workspace.Title</h4>
                                <div class="workspace-actions">
                                    <a asp-action="Details" asp-route-id="@workspace.Id" class="action-btn details" title="View Details">
                                        <i class="bi bi-eye-fill"></i>
                                    </a>
                                    @if (Model.AdminId == Model.UserId)
                                    {
                                        <a asp-action="Edit" asp-route-id="@workspace.Id"
                                           class="action-btn edit-btn" title="Edit">
                                            <i class="bi bi-pencil"></i>
                                        </a>
                                        <form asp-action="Delete" asp-route-id="@workspace.Id" method="post" class="d-inline"
                                              onsubmit="return confirm('Delete this workspace and all its data?');">
                                            <button type="submit" class="action-btn delete-btn" title="Delete">
                                                <i class="bi bi-trash"></i>
                                            </button>
                                        </form>
                                    }
                                </div>
                            </div>

                            <div class="workspace-body">
                                @if (!string.IsNullOrEmpty(workspace.Description))
                                {
                                    <p class="workspace-description">@workspace.Description</p>
                                }
                                else
                                {
                                    <p class="workspace-description no-description">No description provided</p>
                                }
                            </div>

                            <div class="workspace-footer">
                                <div class="workspace-meta">
                                    <span class="color-badge @GetColorClass(workspace.Color)">
                                        @workspace.Color.ToString()
                                    </span>
                                </div>
                                <a asp-action="ShowAll" asp-controller="TaskList" asp-route-id="@workspace.Id"
                                   class="btn-go-to-tasks">
                                    <i class="bi bi-arrow-right-circle"></i>
                                    <span>Go To Tasks</span>
                                </a>
                            </div>
                        </div>
                    }
                </div>
            }
            else
            {
                <div class="empty-state">
                    <div class="empty-state-content">
                        <div class="empty-icon">
                            <i class="bi bi-kanban"></i>
                        </div>
                        <h3>No Workspaces Found</h3>
                        <p>This team doesn't have any workspaces yet. Start organizing your work by creating the first workspace!</p>
                        @if (Model.AdminId == Model.UserId)
                        {
                            <a asp-action="Add" asp-route-teamId="@Model.TeamId" class="btn btn-create-first">
                                <i class="bi bi-plus-circle-fill"></i>
                                <span>Create First Workspace</span>
                            </a>
                        }
                        else
                        {
                            <p class="admin-note">Only team administrators can create workspaces.</p>
                        }
                    </div>
                </div>
            }
        </div>
    </div>
</div>

@functions {
    private string GetColorClass(WorkSpaceColor color)
    {
        return color switch
        {
            WorkSpaceColor.Red => "color-red",
            WorkSpaceColor.Blue => "color-blue",
            WorkSpaceColor.Green => "color-green",
            WorkSpaceColor.Yellow => "color-yellow",
            _ => "color-default"
        };
    }
}

<style>
    /* Root Variables */
    :root {
        --primary-color: #6366f1;
        --primary-hover: #5855eb;
        --success-color: #10b981;
        --success-hover: #059669;
        --warning-color: #f59e0b;
        --warning-hover: #d97706;
        --danger-color: #ef4444;
        --danger-hover: #dc2626;
        --info-color: #3b82f6;
        --info-hover: #2563eb;
        --purple-color: #8b5cf6;
        --purple-hover: #7c3aed;
        --secondary-color: #6b7280;
        --text-primary: #1f2937;
        --text-secondary: #6b7280;
        --text-muted: #9ca3af;
        --border-color: #e5e7eb;
        --background-light: #f8fafc;
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --radius: 12px;
        --radius-sm: 8px;
    }

    /* Color Variables */
    :root {
        --color-red: #ef4444;
        --color-blue: #3b82f6;
        --color-green: #10b981;
        --color-yellow: #f59e0b;
        --color-default: #6b7280;
    }

    /* Main Container */
    .workspaces-wrapper {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .workspaces-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header Styles */
    .workspaces-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1.5rem;
    }

    .title-section {
        flex: 1;
    }

    .workspaces-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--text-primary);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: linear-gradient(135deg, var(--purple-color), #7c3aed);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .workspaces-subtitle {
        color: var(--text-secondary);
        margin: 0.5rem 0 0 0;
        font-size: 1.1rem;
        font-weight: 500;
    }

    .header-actions {
        display: flex;
        gap: 1rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 0.75rem 1.25rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        text-decoration: none;
        border: 2px solid;
        cursor: pointer;
        font-size: 0.95rem;
    }

    .btn-info {
        background: var(--info-color);
        color: white;
        border-color: var(--info-color);
    }

        .btn-info:hover {
            background: var(--info-hover);
            border-color: var(--info-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(59, 130, 246, 0.3);
        }

    .btn-members {
        background: var(--purple-color);
        color: white;
        border-color: var(--purple-color);
    }

        .btn-members:hover {
            background: var(--purple-hover);
            border-color: var(--purple-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(139, 92, 246, 0.3);
        }

    .btn-create,
    .btn-create-first {
        background: var(--success-color);
        color: white;
        border-color: var(--success-color);
    }

        .btn-create:hover,
        .btn-create-first:hover {
            background: var(--success-hover);
            border-color: var(--success-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
        }

    .btn-back {
        background: rgba(107, 114, 128, 0.1);
        color: var(--secondary-color);
        border-color: var(--secondary-color);
    }

        .btn-back:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
        }

    /* Workspaces Content */
    .workspaces-content {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
        overflow: hidden;
    }

    .workspaces-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 1.5rem;
        padding: 2rem;
    }

    .workspace-card {
        background: white;
        border-radius: var(--radius-sm);
        box-shadow: var(--shadow-md);
        border: 1px solid var(--border-color);
        overflow: hidden;
        transition: all 0.3s ease;
        position: relative;
    }

        .workspace-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

    .workspace-header {
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .workspace-color-indicator {
        width: 12px;
        height: 12px;
        border-radius: 50%;
        flex-shrink: 0;
    }

    .workspace-title {
        flex: 1;
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
    }

    .workspace-actions {
        display: flex;
        gap: 0.5rem;
    }

    .action-btn {
        width: 36px;
        height: 36px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        text-decoration: none;
        transition: all 0.3s ease;
        font-size: 0.875rem;
    }

        .action-btn.details {
            background: rgba(59, 130, 246, 0.1);
            color: var(--info-color);
        }

            .action-btn.details:hover {
                background: var(--info-color);
                color: white;
                transform: scale(1.1);
            }

        .action-btn.edit {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning-color);
        }

            .action-btn.edit:hover {
                background: var(--warning-color);
                color: white;
                transform: scale(1.1);
            }

        .action-btn.delete {
            background: rgba(239, 68, 68, 0.1);
            color: var(--danger-color);
        }

            .action-btn.delete:hover {
                background: var(--danger-color);
                color: white;
                transform: scale(1.1);
            }

    .workspace-body {
        padding: 1.5rem;
    }

    .workspace-description {
        color: var(--text-secondary);
        margin: 0;
        line-height: 1.6;
        font-size: 0.95rem;
    }

        .workspace-description.no-description {
            font-style: italic;
            color: var(--text-muted);
        }

    .workspace-footer {
        padding: 1rem 1.5rem;
        background: var(--background-light);
        border-top: 1px solid var(--border-color);
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .workspace-meta {
        display: flex;
        align-items: center;
        gap: 0.75rem;
    }

    .color-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.75rem;
        font-weight: 600;
        text-transform: capitalize;
        color: white;
    }

    .btn-view-tasks {
        background: var(--purple-color);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        text-decoration: none;
        font-size: 0.875rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
    }

        .btn-view-tasks:hover {
            background: var(--purple-hover);
            transform: translateY(-1px);
            box-shadow: 0 4px 8px rgba(139, 92, 246, 0.3);
        }

    /* Color Classes */
    .color-red {
        background-color: var(--color-red);
    }

    .color-blue {
        background-color: var(--color-blue);
    }

    .color-green {
        background-color: var(--color-green);
    }

    .color-yellow {
        background-color: var(--color-yellow);
    }

    .color-default {
        background-color: var(--color-default);
    }

    /* Empty State */
    .empty-state {
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 400px;
        padding: 3rem 2rem;
    }

    .empty-state-content {
        text-align: center;
        max-width: 500px;
    }

    .empty-icon {
        font-size: 4rem;
        color: var(--text-muted);
        margin-bottom: 1.5rem;
    }

    .empty-state-content h3 {
        font-size: 1.75rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 1rem 0;
    }

    .empty-state-content p {
        color: var(--text-secondary);
        margin: 0 0 2rem 0;
        line-height: 1.6;
        font-size: 1.1rem;
    }

    .admin-note {
        color: var(--text-muted);
        font-style: italic;
        font-size: 0.95rem;
        margin-top: 1rem;
    }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .workspaces-wrapper

    {
        padding: 1rem 0;
    }

    .header-content {
        flex-direction: column;
        align-items: flex-start;
    }

    .header-actions {
        width: 100%;
        justify-content: flex-start;
    }

    .workspaces-title {
        font-size: 2rem;
    }

    .workspaces-grid {
        grid-template-columns: 1fr;
        padding: 1rem;
    }

    }

    @@media (max-width: 480px) {
        .workspace-header

    {
        flex-direction: column;
        align-items: flex-start;
        gap: 1rem;
    }

    .workspace-actions {
        align-self: flex-end;
    }

    .workspace-footer {
        flex-direction: column;
        gap: 1rem;
        align-items: flex-start;
    }

    .header-actions {
        flex-direction: column;
        width: 100%;
    }

    .btn {
        justify-content: center;
    }

    }
</style>