@model TaskManagmentSystem.ViewModels.TaskListsViewModel

@{
    ViewData["Title"] = "Task Board";
}

<div class="task-board-wrapper">
    <div class="container-fluid task-board-container">
        <!-- Header Section -->
        <div class="board-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="board-title">@ViewData["Title"]</h1>
                    <p class="board-subtitle">Organize and track your tasks efficiently</p>
                </div>
                <a asp-action="Add" asp-route-id="@Model.WorkSpaceId" class="btn btn-add-list">
                    <i class="bi bi-plus-circle-fill"></i>
                    <span>Add New List</span>
                </a>
            </div>
        </div>

        <!-- Task Lists Container -->
        <div class="lists-container">
            <div class="lists-scroll-wrapper">
                @foreach (var taskList in Model.TaskLists)
                {
                    <div class="task-list-column">
                        <div class="task-list-card">
                            <!-- List Header -->
                            <div class="list-header">
                                <div class="list-title-section">
                                    <h5 class="list-title">@taskList.Title</h5>
                                    <span class="task-count">@(taskList.UserTasks?.Count ?? 0) tasks</span>
                                </div>
                                <div class="list-actions">
                                    <a asp-action="Edit" asp-route-id="@taskList.Id"
                                       class="btn-action btn-edit"
                                       title="Edit List">
                                        <i class="bi bi-pencil-square"></i>
                                        <span>Edit</span>
                                    </a>
                                    <form asp-action="Delete" method="post" class="d-inline"
                                          onsubmit="return confirm('Delete this task list and all its tasks?');">
                                        <input type="hidden" name="taskListId" value="@taskList.Id" />
                                        <input type="hidden" name="workSpaceId" value="@Model.WorkSpaceId" />
                                        <button type="submit" class="btn-action btn-delete" title="Delete List">
                                            <i class="bi bi-trash3-fill"></i>
                                            <span>Delete</span>
                                        </button>
                                    </form>
                                </div>
                            </div>

                            <!-- Tasks Container -->
                            <div class="tasks-container">
                                @if (taskList.UserTasks?.Any() != true)
                                {
                                    <div class="empty-state">
                                        <div class="empty-icon">
                                            <i class="bi bi-clipboard-check"></i>
                                        </div>
                                        <p class="empty-text">No tasks yet</p>
                                        <p class="empty-subtext">Add your first task below</p>
                                    </div>
                                }
                                else
                                {
                                    <div class="tasks-list">
                                        @foreach (var task in taskList.UserTasks)
                                        {
                                            <div class="task-card">
                                                <div class="task-content">
                                                    <div class="task-header">
                                                        <h6 class="task-title">@task.Title</h6>
                                                        <div class="task-actions">
                                                            <a asp-action="Edit" asp-controller="UserTask"
                                                               asp-route-id="@task.Id"
                                                               asp-route-WorkSpaceId="@Model.WorkSpaceId"
                                                               class="task-btn task-btn-edit"
                                                               title="Edit Task">
                                                                <i class="bi bi-pencil-square"></i>
                                                                <span>Edit</span>
                                                            </a>
                                                            <form asp-action="Delete" asp-controller="UserTask" method="post" class="d-inline"
                                                                  onsubmit="return confirm('Are you sure you want to delete this task?');">
                                                                <input type="hidden" name="Id" value="@task.Id" />
                                                                <input type="hidden" name="workSpaceId" value="@Model.WorkSpaceId" />
                                                                <button type="submit" class="task-btn task-btn-delete" title="Delete Task">
                                                                    <i class="bi bi-trash3-fill"></i>
                                                                    <span>Delete</span>
                                                                </button>
                                                            </form>
                                                        </div>
                                                    </div>
                                                    @if (!string.IsNullOrEmpty(task.Description))
                                                    {
                                                        <p class="task-description">@task.Description</p>
                                                    }
                                                    <div class="task-footer">
                                                        <span class="task-date">
                                                            <i class="bi bi-calendar3"></i>
                                                            @task.CreatedDate.ToString("MMM dd, yyyy")
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>

                            <!-- Add Task Form -->
                            <div class="add-task-section">
                                <form method="post" asp-action="Add" asp-controller="UserTask">
                                    <input type="hidden" name="taskListId" value="@taskList.Id" />
                                    <input type="hidden" name="workSpaceId" value="@Model.WorkSpaceId" />
                                    <button type="submit" class="btn-add-task">
                                        <i class="bi bi-plus-circle"></i>
                                        <span>Add a task</span>
                                    </button>
                                </form>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<style>
    /* Root Variables */
    :root {
        --primary-color: #6366f1;
        --primary-hover: #5855eb;
        --secondary-color: #f8fafc;
        --accent-color: #10b981;
        --warning-color: #f59e0b;
        --danger-color: #ef4444;
        --text-primary: #1f2937;
        --text-secondary: #6b7280;
        --text-muted: #9ca3af;
        --border-color: #e5e7eb;
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --radius: 12px;
        --radius-sm: 8px;
    }

    /* Main Container */
    .task-board-wrapper {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .task-board-container {
        max-width: 100%;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header Styles */
    .board-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .title-section {
        flex: 1;
    }

    .board-title {
        font-size: 2.5rem;
        font-weight: 700;
        color: var(--text-primary);
        margin: 0;
        background: linear-gradient(135deg, var(--primary-color), #8b5cf6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .board-subtitle {
        color: var(--text-secondary);
        margin: 0.5rem 0 0 0;
        font-size: 1.1rem;
    }

    .btn-add-list {
        background: linear-gradient(135deg, var(--primary-color), var(--primary-hover));
        color: white;
        border: none;
        padding: 0.875rem 1.5rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        box-shadow: var(--shadow-md);
        text-decoration: none;
        font-size: 1rem;
    }

        .btn-add-list:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-lg);
            color: white;
        }

    /* Lists Container */
    .lists-container {
        overflow-x: auto;
        padding-bottom: 1rem;
    }

    .lists-scroll-wrapper {
        display: flex;
        gap: 1.5rem;
        min-height: 70vh;
        padding: 0.5rem;
    }

    .task-list-column {
        min-width: 350px;
        flex-shrink: 0;
    }

    /* Task List Card */
    .task-list-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        box-shadow: var(--shadow-md);
        border: 1px solid rgba(255, 255, 255, 0.2);
        height: fit-content;
        min-height: 400px;
        display: flex;
        flex-direction: column;
        transition: all 0.3s ease;
    }

        .task-list-card:hover {
            box-shadow: var(--shadow-lg);
            transform: translateY(-2px);
        }

    /* List Header */
    .list-header {
        padding: 1.5rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        border-radius: var(--radius) var(--radius) 0 0;
    }

    .list-title-section {
        flex: 1;
    }

    .list-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 0.25rem 0;
    }

    .task-count {
        font-size: 0.875rem;
        color: var(--text-muted);
        background: rgba(99, 102, 241, 0.1);
        padding: 0.25rem 0.5rem;
        border-radius: 12px;
        font-weight: 500;
    }

    .list-actions {
        display: flex;
        gap: 0.75rem;
        flex-wrap: wrap;
    }

    /* أزرار التعديل والحذف المحسنة */
    .btn-action {
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        border: 2px solid;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
        text-decoration: none;
        font-weight: 600;
        font-size: 0.875rem;
        min-width: 80px;
        justify-content: center;
    }

    .btn-edit {
        background: white;
        color: var(--warning-color);
        border-color: var(--warning-color);
    }

        .btn-edit:hover {
            background: var(--warning-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(245, 158, 11, 0.3);
        }

    .btn-delete {
        background: white;
        color: var(--danger-color);
        border-color: var(--danger-color);
    }

        .btn-delete:hover {
            background: var(--danger-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(239, 68, 68, 0.3);
        }

    /* Tasks Container */
    .tasks-container {
        flex: 1;
        padding: 1rem;
        min-height: 200px;
    }

    .tasks-list {
        display: flex;
        flex-direction: column;
        gap: 0.75rem;
        max-height: 60vh;
        overflow-y: auto;
        padding-right: 0.5rem;
    }

        /* Custom Scrollbar */
        .tasks-list::-webkit-scrollbar {
            width: 6px;
        }

        .tasks-list::-webkit-scrollbar-track {
            background: rgba(0, 0, 0, 0.05);
            border-radius: 3px;
        }

        .tasks-list::-webkit-scrollbar-thumb {
            background: rgba(99, 102, 241, 0.3);
            border-radius: 3px;
        }

            .tasks-list::-webkit-scrollbar-thumb:hover {
                background: rgba(99, 102, 241, 0.5);
            }

    /* Task Card */
    .task-card {
        background: white;
        border-radius: var(--radius-sm);
        box-shadow: var(--shadow-sm);
        border: 1px solid var(--border-color);
        transition: all 0.2s ease;
        cursor: pointer;
    }

        .task-card:hover {
            box-shadow: var(--shadow-md);
            transform: translateY(-1px);
            border-color: var(--primary-color);
        }

    .task-content {
        padding: 1rem;
    }

    .task-header {
        display: flex;
        justify-content: space-between;
        align-items: flex-start;
        margin-bottom: 0.5rem;
        gap: 1rem;
    }

    .task-title {
        font-size: 1rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0;
        flex: 1;
        line-height: 1.4;
    }

    .task-actions {
        display: flex;
        gap: 0.5rem;
        flex-shrink: 0;
    }

    /* أزرار المهام المحسنة */
    .task-btn {
        padding: 0.375rem 0.75rem;
        border-radius: 6px;
        border: 1px solid;
        display: flex;
        align-items: center;
        gap: 0.375rem;
        transition: all 0.2s ease;
        cursor: pointer;
        text-decoration: none;
        font-size: 0.75rem;
        font-weight: 600;
        white-space: nowrap;
    }

    .task-btn-edit {
        background: rgba(245, 158, 11, 0.1);
        color: var(--warning-color);
        border-color: rgba(245, 158, 11, 0.3);
    }

        .task-btn-edit:hover {
            background: var(--warning-color);
            color: white;
            border-color: var(--warning-color);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(245, 158, 11, 0.3);
        }

    .task-btn-delete {
        background: rgba(239, 68, 68, 0.1);
        color: var(--danger-color);
        border-color: rgba(239, 68, 68, 0.3);
    }

        .task-btn-delete:hover {
            background: var(--danger-color);
            color: white;
            border-color: var(--danger-color);
            transform: translateY(-1px);
            box-shadow: 0 2px 8px rgba(239, 68, 68, 0.3);
        }

    .task-description {
        color: var(--text-secondary);
        font-size: 0.875rem;
        line-height: 1.5;
        margin: 0 0 0.75rem 0;
    }

    .task-footer {
        display: flex;
        justify-content: flex-end;
        align-items: center;
    }

    .task-date {
        font-size: 0.75rem;
        color: var(--text-muted);
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

    /* Empty State */
    .empty-state {
        text-align: center;
        padding: 2rem 1rem;
    }

    .empty-icon {
        font-size: 3rem;
        color: var(--text-muted);
        margin-bottom: 1rem;
    }

    .empty-text {
        font-size: 1.125rem;
        font-weight: 500;
        color: var(--text-secondary);
        margin: 0 0 0.5rem 0;
    }

    .empty-subtext {
        font-size: 0.875rem;
        color: var(--text-muted);
        margin: 0;
    }

    /* Add Task Section */
    .add-task-section {
        padding: 1rem;
        border-top: 1px solid var(--border-color);
        background: rgba(248, 250, 252, 0.5);
        border-radius: 0 0 var(--radius) var(--radius);
    }

    .btn-add-task {
        width: 100%;
        background: white;
        border: 2px solid var(--primary-color);
        color: var(--primary-color);
        padding: 0.75rem;
        border-radius: var(--radius-sm);
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        transition: all 0.2s ease;
        cursor: pointer;
        font-weight: 600;
        font-size: 0.875rem;
    }

        .btn-add-task:hover {
            background: var(--primary-color);
            color: white;
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(99, 102, 241, 0.3);
        }
</style>