@model TaskManagmentSystem.ViewModels.ProfilrEditViewModel

@{
    ViewData["Title"] = "Edit Profile";
}

<div class="profile-edit-wrapper">
    <div class="container-fluid profile-edit-container">
        <!-- Header Section -->
        <div class="edit-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="edit-title">
                        <i class="bi bi-pencil-square"></i>
                        Edit Profile
                    </h1>
                    <p class="edit-subtitle">Update your profile information and picture</p>
                </div>
                <a asp-action="Index" class="btn btn-back">
                    <i class="bi bi-arrow-left"></i>
                    <span>Back to List</span>
                </a>
            </div>
        </div>

        <!-- Form Section -->
        <div class="edit-card">
            <div class="edit-card-header">
                <h3 class="card-title">Profile Information</h3>
                <p class="card-subtitle">Fill in your details below</p>
            </div>

            <div class="edit-card-body">
                <form asp-action="SaveEdit" method="post" enctype="multipart/form-data" class="profile-form">
                    <div asp-validation-summary="ModelOnly" class="validation-summary"></div>

                    <!-- Hidden ID Field -->
                    <input asp-for="Id" type="hidden" />

                    <!-- Profile Image Section -->
                    <div class="form-section">
                        <h4 class="section-title">Profile Picture</h4>

                        <div class="image-upload-section">
                            <!-- Current Image Display -->
                            <div class="current-image-container">
                                <div class="image-preview-wrapper">
                                    @if (!string.IsNullOrEmpty(Model.PicURL))
                                    {
                                        <img id="currentImage" src="@Model.PicURL" alt="Current Profile Picture" class="current-profile-image" />
                                    }
                                    else
                                    {
                                        <div id="imagePlaceholder" class="image-placeholder">
                                            <i class="bi bi-person-fill"></i>
                                            <p>No image uploaded</p>
                                        </div>
                                    }
                                </div>
                                <div class="image-info">
                                    <h6>Current Picture</h6>
                                    <p class="text-muted">This is your current profile picture</p>
                                </div>
                            </div>

                            <!-- Image Upload Controls -->
                            <div class="image-upload-controls">
                                <div class="form-group">
                                    <label asp-for="ProfileImage" class="form-label">
                                        <i class="bi bi-cloud-upload"></i>
                                        Upload New Picture
                                    </label>
                                    <div class="file-input-wrapper">
                                        <input asp-for="ProfileImage" type="file" class="file-input" id="profileImageInput" accept="image/*" onchange="previewImage(this)" />
                                        <label for="profileImageInput" class="file-input-label">
                                            <i class="bi bi-camera"></i>
                                            <span>Choose Image</span>
                                        </label>
                                    </div>
                                    <span asp-validation-for="ProfileImage" class="validation-error"></span>
                                    <small class="form-help">Supported formats: JPG, PNG, GIF. Max size: 5MB</small>
                                </div>

                                <!-- Image Preview -->
                                <div id="imagePreview" class="image-preview" style="display: none;">
                                    <img id="previewImg" src="/placeholder.svg" alt="Preview" class="preview-image" />
                                    <div class="preview-actions">
                                        <button type="button" onclick="clearImagePreview()" class="btn btn-clear">
                                            <i class="bi bi-x-circle"></i>
                                            <span>Remove</span>
                                        </button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- URL Input (Alternative) -->
                        @* <div class="form-group"> *@
                        @*     <label asp-for="PicURL" class="form-label"> *@
                        @*         <i class="bi bi-link-45deg"></i> *@
                        @*         Or Enter Image URL *@
                        @*     </label> *@
                        @*     <input asp-for="PicURL" class="form-input" placeholder="https://example.com/image.jpg" onchange="updateImageFromURL(this)" /> *@
                        @*     <span asp-validation-for="PicURL" class="validation-error"></span> *@
                        @*     <small class="form-help">You can also provide a direct link to an image</small> *@
                        @* </div> *@
                    </div>

                    <!-- Personal Information Section -->
                    <div class="form-section">
                        <h4 class="section-title">Personal Information</h4>

                        <div class="form-row">
                            <div class="form-group half-width">
                                <label asp-for="FirstName" class="form-label">
                                    <i class="bi bi-person"></i>
                                    First Name
                                </label>
                                <input asp-for="FirstName" class="form-input" placeholder="Enter your first name" />
                                <span asp-validation-for="FirstName" class="validation-error"></span>
                            </div>

                            <div class="form-group half-width">
                                <label asp-for="LastName" class="form-label">
                                    <i class="bi bi-person"></i>
                                    Last Name
                                </label>
                                <input asp-for="LastName" class="form-input" placeholder="Enter your last name" />
                                <span asp-validation-for="LastName" class="validation-error"></span>
                            </div>
                        </div>

                        <div class="form-group">
                            <label asp-for="JopTitle" class="form-label">
                                <i class="bi bi-briefcase"></i>
                                Job Title
                            </label>
                            <input asp-for="JopTitle" class="form-input" placeholder="Enter your job title (optional)" />
                            <span asp-validation-for="JopTitle" class="validation-error"></span>
                        </div>
                    </div>

                    <!-- Form Actions -->
                    <div class="form-actions">
                        <button type="submit" class="btn btn-save">
                            <i class="bi bi-check-circle-fill"></i>
                            <span>Save Changes</span>
                        </button>
                        <a asp-action="Index" class="btn btn-cancel">
                            <i class="bi bi-x-circle"></i>
                            <span>Cancel</span>
                        </a>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    /* Root Variables */
    :root {
        --primary-color: #6366f1;
        --primary-hover: #5855eb;
        --success-color: #10b981;
        --success-hover: #059669;
        --danger-color: #ef4444;
        --warning-color: #f59e0b;
        --secondary-color: #6b7280;
        --text-primary: #1f2937;
        --text-secondary: #6b7280;
        --text-muted: #9ca3af;
        --border-color: #e5e7eb;
        --background-light: #f8fafc;
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --radius: 12px;
        --radius-sm: 8px;
    }

    /* Main Container */
    .profile-edit-wrapper {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .profile-edit-container {
        max-width: 900px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header Styles */
    .edit-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .title-section {
        flex: 1;
    }

    .edit-title {
        font-size: 2.25rem;
        font-weight: 700;
        color: var(--text-primary);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: linear-gradient(135deg, var(--primary-color), #8b5cf6);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .edit-subtitle {
        color: var(--text-secondary);
        margin: 0.5rem 0 0 0;
        font-size: 1.1rem;
    }

    .btn-back {
        background: rgba(107, 114, 128, 0.1);
        color: var(--secondary-color);
        border: 2px solid var(--secondary-color);
        padding: 0.75rem 1.25rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .btn-back:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
        }

    /* Form Card */
    .edit-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
        overflow: hidden;
    }

    .edit-card-header {
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        padding: 2rem;
        border-bottom: 1px solid var(--border-color);
    }

    .card-title {
        font-size: 1.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 0.5rem 0;
    }

    .card-subtitle {
        color: var(--text-secondary);
        margin: 0;
        font-size: 1rem;
    }

    .edit-card-body {
        padding: 2rem;
    }

    /* Form Sections */
    .form-section {
        margin-bottom: 2rem;
        padding-bottom: 1.5rem;
        border-bottom: 1px solid rgba(229, 231, 235, 0.5);
    }

        .form-section:last-of-type {
            border-bottom: none;
            margin-bottom: 0;
        }

    .section-title {
        font-size: 1.25rem;
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 1.5rem 0;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }

        .section-title::before {
            content: "";
            width: 4px;
            height: 1.25rem;
            background: var(--primary-color);
            border-radius: 2px;
        }

    /* Image Upload Section */
    .image-upload-section {
        display: flex;
        gap: 2rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .current-image-container {
        flex: 1;
        min-width: 200px;
    }

    .image-preview-wrapper {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        overflow: hidden;
        border: 4px solid var(--border-color);
        margin-bottom: 1rem;
    }

    .current-profile-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }

    .image-placeholder {
        width: 100%;
        height: 100%;
        background: var(--background-light);
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        color: var(--text-muted);
    }

        .image-placeholder i {
            font-size: 3rem;
            margin-bottom: 0.5rem;
        }

        .image-placeholder p {
            margin: 0;
            font-size: 0.875rem;
        }

    .image-info h6 {
        color: var(--text-primary);
        font-weight: 600;
        margin: 0 0 0.25rem 0;
    }

    .image-upload-controls {
        flex: 1;
        min-width: 300px;
    }

    /* File Input Styling */
    .file-input-wrapper {
        position: relative;
        margin-bottom: 1rem;
    }

    .file-input {
        position: absolute;
        opacity: 0;
        width: 0;
        height: 0;
    }

    .file-input-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.875rem 1.5rem;
        background: var(--primary-color);
        color: white;
        border-radius: var(--radius-sm);
        cursor: pointer;
        transition: all 0.3s ease;
        font-weight: 600;
        justify-content: center;
    }

        .file-input-label:hover {
            background: var(--primary-hover);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

    /* Image Preview */
    .image-preview {
        border: 2px dashed var(--border-color);
        border-radius: var(--radius-sm);
        padding: 1rem;
        text-align: center;
        background: var(--background-light);
    }

    .preview-image {
        max-width: 200px;
        max-height: 200px;
        border-radius: var(--radius-sm);
        margin-bottom: 1rem;
    }

    .preview-actions {
        display: flex;
        justify-content: center;
    }

    .btn-clear {
        background: var(--danger-color);
        color: white;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: var(--radius-sm);
        cursor: pointer;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 500;
        transition: all 0.3s ease;
    }

        .btn-clear:hover {
            background: #dc2626;
            transform: translateY(-1px);
        }

    /* Form Styles */
    .form-row {
        display: flex;
        gap: 1.5rem;
        margin-bottom: 1.5rem;
        flex-wrap: wrap;
    }

    .form-group {
        margin-bottom: 1.5rem;
        flex: 1;
    }

        .form-group.half-width {
            flex: 0 0 calc(50% - 0.75rem);
            min-width: 250px;
        }

    .form-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: var(--text-primary);
        margin-bottom: 0.5rem;
        font-size: 1rem;
    }

    .form-input {
        width: 100%;
        padding: 0.875rem 1rem;
        border: 2px solid var(--border-color);
        border-radius: var(--radius-sm);
        font-size: 1rem;
        transition: all 0.3s ease;
        background: white;
        color: var(--text-primary);
    }

        .form-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
            transform: translateY(-1px);
        }

    .form-help {
        display: block;
        margin-top: 0.25rem;
        font-size: 0.875rem;
        color: var(--text-muted);
        font-style: italic;
    }

    /* Validation */
    .validation-summary {
        background: rgba(239, 68, 68, 0.1);
        border: 1px solid rgba(239, 68, 68, 0.3);
        color: var(--danger-color);
        padding: 1rem;
        border-radius: var(--radius-sm);
        margin-bottom: 1.5rem;
    }

    .validation-error {
        color: var(--danger-color);
        font-size: 0.875rem;
        margin-top: 0.25rem;
        display: block;
        font-weight: 500;
    }

    /* Form Actions */
    .form-actions {
        display: flex;
        gap: 1rem;
        margin-top: 2rem;
        flex-wrap: wrap;
    }

    .btn {
        padding: 0.875rem 1.5rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        cursor: pointer;
        text-decoration: none;
        font-size: 1rem;
        border: 2px solid;
        min-width: 140px;
        justify-content: center;
    }

    .btn-save {
        background: var(--success-color);
        color: white;
        border-color: var(--success-color);
    }

        .btn-save:hover {
            background: var(--success-hover);
            border-color: var(--success-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
        }

    .btn-cancel {
        background: white;
        color: var(--secondary-color);
        border-color: var(--secondary-color);
    }

        .btn-cancel:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(107, 114, 128, 0.3);
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .profile-edit-wrapper

    {
        padding: 1rem 0;
    }

    .header-content {
        flex-direction: column;
        align-items: flex-start;
    }

    .image-upload-section {
        flex-direction: column;
    }

    .form-group.half-width {
        flex: 1;
        min-width: 100%;
    }

    .form-actions {
        flex-direction: column;
    }

    .btn {
        width: 100%;
    }

    }
</style>

<script>
    // Preview uploaded image
    function previewImage(input) {
        const preview = document.getElementById('imagePreview');
        const previewImg = document.getElementById('previewImg');
        const currentImage = document.getElementById('currentImage');
        const placeholder = document.getElementById('imagePlaceholder');

        if (input.files && input.files[0]) {
            const reader = new FileReader();

            reader.onload = function(e) {
                previewImg.src = e.target.result;
                preview.style.display = 'block';

                // Hide current image and show preview
                if (currentImage) currentImage.style.opacity = '0.5';
                if (placeholder) placeholder.style.opacity = '0.5';
            };

            reader.readAsDataURL(input.files[0]);
        }
    }

    // Clear image preview
    function clearImagePreview() {
        const preview = document.getElementById('imagePreview');
        const previewImg = document.getElementById('previewImg');
        const fileInput = document.getElementById('profileImageInput');
        const currentImage = document.getElementById('currentImage');
        const placeholder = document.getElementById('imagePlaceholder');

        // Clear preview
        preview.style.display = 'none';
        previewImg.src = '';
        fileInput.value = '';

        // Restore current image opacity
        if (currentImage) currentImage.style.opacity = '1';
        if (placeholder) placeholder.style.opacity = '1';
    }

    // Update image from URL
    function updateImageFromURL(input) {
        const currentImage = document.getElementById('currentImage');
        const placeholder = document.getElementById('imagePlaceholder');
        const url = input.value.trim();

        if (url) {
            // Test if URL is valid by creating an image
            const testImg = new Image();
            testImg.onload = function() {
                // URL is valid, update display
                if (currentImage) {
                    currentImage.src = url;
                    currentImage.style.display = 'block';
                }
                if (placeholder) {
                    placeholder.style.display = 'none';
                }
            };
            testImg.onerror = function() {
                // URL is invalid, show placeholder
                if (currentImage) {
                    currentImage.style.display = 'none';
                }
                if (placeholder) {
                    placeholder.style.display = 'flex';
                }
            };
            testImg.src = url;
        } else {
            // Empty URL, show placeholder
            if (currentImage) {
                currentImage.style.display = 'none';
            }
            if (placeholder) {
                placeholder.style.display = 'flex';
            }
        }
    }
</script>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}