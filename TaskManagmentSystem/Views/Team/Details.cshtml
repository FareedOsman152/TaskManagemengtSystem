@model TaskManagmentSystem.ViewModels.TeamDeatilsViewModel

@{
    ViewData["Title"] = "Team Details";
}

<div class="team-details-wrapper">
    <div class="container-fluid team-details-container">
        <!-- Header Section -->
        <div class="details-header">
            <div class="header-content">
                <div class="title-section">
                    <h1 class="details-title">
                        <i class="bi bi-diagram-3-fill"></i>
                        Team Details
                    </h1>
                    <p class="details-subtitle">View comprehensive information about this team</p>
                </div>
                <div class="header-actions">
                    <a asp-action="Show" class="btn btn-back">
                        <i class="bi bi-arrow-left"></i>
                        <span>Back to Teams</span>
                    </a>
                </div>
            </div>
        </div>

        <!-- Team Information Card -->
        <div class="details-content">
            <div class="team-info-card">
                <div class="card-header">
                    <div class="header-icon">
                        <i class="bi bi-info-circle-fill"></i>
                    </div>
                    <div class="header-text">
                        <h3>@Model.Title</h3>
                        <p>Team Information & Settings</p>
                    </div>
                    <div class="team-status">
                        <span class="status-badge active">
                            <i class="bi bi-check-circle-fill"></i>
                            Active
                        </span>
                    </div>
                </div>

                <div class="card-body">
                    <div class="info-grid">
                        <div class="info-item">
                            <div class="info-label">
                                <i class="bi bi-tag-fill"></i>
                                <span>Team Name</span>
                            </div>
                            <div class="info-value">@Model.Title</div>
                        </div>

                        <div class="info-item full-width">
                            <div class="info-label">
                                <i class="bi bi-card-text"></i>
                                <span>Description</span>
                            </div>
                            <div class="info-value">
                                @if (!string.IsNullOrEmpty(Model.Description))
                                {
                                    @Model.Description
                                }
                                else
                                {
                                    <span class="no-description">No description provided</span>
                                }
                            </div>
                        </div>

                        <div class="info-item">
                            <div class="info-label">
                                <i class="bi bi-calendar-check"></i>
                                <span>Created Date</span>
                            </div>
                            <div class="info-value">@Model.DateCreated.ToString("MMMM dd, yyyy 'at' hh:mm tt")</div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Team Members Card -->
            <div class="team-members-card">
                <div class="card-header">
                    <div class="header-icon">
                        <i class="bi bi-people-fill"></i>
                    </div>
                    <div class="header-text">
                        <h3>Team Members</h3>
                        <p>@(Model.Users?.Count ?? 0) member(s) in this team</p>
                    </div>
                    @if (Model.AdminId == Model.UserId)
                    {
                        <div class="header-actions">
                            <a asp-controller="TeamInvitation" asp-action="Send" asp-route-id="@Model.Id" class="btn btn-add-member">
                                <i class="bi bi-person-plus-fill"></i>
                                <span>Send Invitation</span>
                            </a>
                        </div>
                    }
                </div>

                <div class="card-body">
                    @if (Model.Users != null && Model.Users.Any())
                    {
                        <div class="members-grid">
                            @foreach (var user in Model.Users)
                            {
                                <div class="member-card">
                                    <div class="member-avatar">
                                        <i class="bi bi-person-fill"></i>
                                    </div>
                                    <div class="member-info">
                                        <h6 class="member-name">@user.UserName</h6>
                                    </div>
                                    <div class="member-role">
                                        @if (user.IsAdmin)
                                        {
                                            <span class="role-badge admin">
                                                <i class="bi bi-shield-fill-check"></i>
                                                Admin
                                            </span>
                                        }
                                        else
                                        {
                                            <span class="role-badge member">
                                                <i class="bi bi-person-check-fill"></i>
                                                Member
                                            </span>
                                        }
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="no-members">
                            <div class="no-members-icon">
                                <i class="bi bi-people"></i>
                            </div>
                            <h5>No Members Found</h5>
                            <p>This team doesn't have any members yet.</p>
                            @if (Model.AdminId == Model.UserId)
                            {
                                <a asp-action="AddMember" asp-route-id="@Model.Id" class="btn btn-add-member">
                                    <i class="bi bi-person-plus-fill"></i>
                                    <span>Add First Member</span>
                                </a>
                            }
                        </div>
                    }
                </div>
            </div>

            <!-- Actions Card -->
            <div class="actions-card">
                <div class="card-header">
                    <div class="header-icon">
                        <i class="bi bi-gear-fill"></i>
                    </div>
                    <div class="header-text">
                        <h3>Team Actions</h3>
                        <p>Manage this team</p>
                    </div>
                </div>

                <div class="card-body">
                    <div class="actions-grid">
                        <a asp-controller="Workspace" asp-action="Index" asp-route-id="@Model.Id" class="action-btn workspaces">
                            <div class="action-icon">
                                <i class="bi bi-kanban-fill"></i>
                            </div>
                            <div class="action-content">
                                <h6>View Workspaces</h6>
                                <p>Access team workspaces</p>
                            </div>
                        </a>

                        @if (Model.AdminId == Model.UserId)
                        {
                            <a asp-action="Edit" asp-route-id="@Model.Id" class="action-btn edit">
                                <div class="action-icon">
                                    <i class="bi bi-pencil-square"></i>
                                </div>
                                <div class="action-content">
                                    <h6>Edit Team</h6>
                                    <p>Modify team settings</p>
                                </div>
                            </a>

                            <a asp-action="Delete" asp-route-id="@Model.Id" class="action-btn delete" onclick="return confirm('Are you sure you want to delete this team? This action cannot be undone.');">
                                <div class="action-icon">
                                    <i class="bi bi-trash3-fill"></i>
                                </div>
                                <div class="action-content">
                                    <h6>Delete Team</h6>
                                    <p>Remove this team permanently</p>
                                </div>
                            </a>
                        }
                        else
                        {
                            <div class="action-btn disabled">
                                <div class="action-icon">
                                    <i class="bi bi-lock-fill"></i>
                                </div>
                                <div class="action-content">
                                    <h6>Admin Only</h6>
                                    <p>Only team admin can edit or delete</p>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Root Variables */
    :root {
        --primary-color: #6366f1;
        --primary-hover: #5855eb;
        --success-color: #10b981;
        --success-hover: #059669;
        --warning-color: #f59e0b;
        --warning-hover: #d97706;
        --danger-color: #ef4444;
        --danger-hover: #dc2626;
        --info-color: #3b82f6;
        --info-hover: #2563eb;
        --purple-color: #8b5cf6;
        --purple-hover: #7c3aed;
        --secondary-color: #6b7280;
        --text-primary: #1f2937;
        --text-secondary: #6b7280;
        --text-muted: #9ca3af;
        --border-color: #e5e7eb;
        --background-light: #f8fafc;
        --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
        --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
        --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
        --radius: 12px;
        --radius-sm: 8px;
    }

    /* Main Container */
    .team-details-wrapper {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        min-height: 100vh;
        padding: 2rem 0;
    }

    .team-details-container {
        max-width: 1000px;
        margin: 0 auto;
        padding: 0 1rem;
    }

    /* Header Styles */
    .details-header {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .header-content {
        display: flex;
        justify-content: space-between;
        align-items: center;
        flex-wrap: wrap;
        gap: 1rem;
    }

    .title-section {
        flex: 1;
    }

    .details-title {
        font-size: 2.25rem;
        font-weight: 700;
        color: var(--text-primary);
        margin: 0;
        display: flex;
        align-items: center;
        gap: 0.75rem;
        background: linear-gradient(135deg, var(--info-color), #2563eb);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    .details-subtitle {
        color: var(--text-secondary);
        margin: 0.5rem 0 0 0;
        font-size: 1.1rem;
    }

    .btn-back {
        background: rgba(107, 114, 128, 0.1);
        color: var(--secondary-color);
        border: 2px solid var(--secondary-color);
        padding: 0.75rem 1.25rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        text-decoration: none;
    }

        .btn-back:hover {
            background: var(--secondary-color);
            color: white;
            transform: translateY(-2px);
        }

    /* Content Layout */
    .details-content {
        display: flex;
        flex-direction: column;
        gap: 2rem;
    }

    /* Card Styles */
    .team-info-card,
    .team-members-card,
    .actions-card {
        background: rgba(255, 255, 255, 0.95);
        backdrop-filter: blur(10px);
        border-radius: var(--radius);
        box-shadow: var(--shadow-lg);
        border: 1px solid rgba(255, 255, 255, 0.2);
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, #f8fafc, #f1f5f9);
        padding: 1.5rem 2rem;
        border-bottom: 1px solid var(--border-color);
        display: flex;
        align-items: center;
        gap: 1rem;
    }

    .header-icon {
        width: 50px;
        height: 50px;
        background: var(--info-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.25rem;
        flex-shrink: 0;
    }

    .header-text {
        flex: 1;
    }

        .header-text h3 {
            font-size: 1.5rem;
            font-weight: 600;
            color: var(--text-primary);
            margin: 0 0 0.25rem 0;
        }

        .header-text p {
            color: var(--text-secondary);
            margin: 0;
            font-size: 0.95rem;
        }

    .team-status {
        flex-shrink: 0;
    }

    .status-badge {
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-size: 0.875rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

        .status-badge.active {
            background: rgba(16, 185, 129, 0.1);
            color: var(--success-color);
            border: 1px solid rgba(16, 185, 129, 0.2);
        }

    /* Header Actions for Add Member Button */
    .header-actions {
        flex-shrink: 0;
    }

    .btn-add-member {
        background: var(--success-color);
        color: white;
        border: 2px solid var(--success-color);
        padding: 0.75rem 1.25rem;
        border-radius: var(--radius-sm);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.5rem;
        transition: all 0.3s ease;
        text-decoration: none;
        font-size: 0.95rem;
    }

        .btn-add-member:hover {
            background: var(--success-hover);
            border-color: var(--success-hover);
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(16, 185, 129, 0.3);
        }

    .card-body {
        padding: 2rem;
    }

    /* Info Grid */
    .info-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1.5rem;
    }

    .info-item {
        display: flex;
        flex-direction: column;
        gap: 0.5rem;
    }

        .info-item.full-width {
            grid-column: 1 / -1;
        }

    .info-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-weight: 600;
        color: var(--text-primary);
        font-size: 0.875rem;
        text-transform: uppercase;
        letter-spacing: 0.05em;
    }

        .info-label i {
            color: var(--info-color);
            font-size: 1rem;
        }

    .info-value {
        color: var(--text-secondary);
        font-size: 1rem;
        line-height: 1.5;
        padding: 0.75rem 1rem;
        background: var(--background-light);
        border-radius: var(--radius-sm);
        border: 1px solid var(--border-color);
    }

    .no-description {
        font-style: italic;
        color: var(--text-muted);
    }

    /* Members Grid */
    .members-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
        gap: 1rem;
    }

    .member-card {
        background: var(--background-light);
        border: 1px solid var(--border-color);
        border-radius: var(--radius-sm);
        padding: 1rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        transition: all 0.3s ease;
    }

        .member-card:hover {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

    .member-avatar {
        width: 45px;
        height: 45px;
        background: var(--primary-color);
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.25rem;
        flex-shrink: 0;
    }

    .member-info {
        flex: 1;
    }

    .member-name {
        font-weight: 600;
        color: var(--text-primary);
        margin: 0 0 0.25rem 0;
        font-size: 1rem;
    }

    .member-id {
        color: var(--text-muted);
        margin: 0;
        font-size: 0.875rem;
    }

    .member-role {
        flex-shrink: 0;
    }

    .role-badge {
        padding: 0.25rem 0.75rem;
        border-radius: 15px;
        font-size: 0.75rem;
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 0.25rem;
    }

        .role-badge.admin {
            background: rgba(245, 158, 11, 0.1);
            color: var(--warning-color);
            border: 1px solid rgba(245, 158, 11, 0.2);
        }

        .role-badge.member {
            background: rgba(59, 130, 246, 0.1);
            color: var(--info-color);
            border: 1px solid rgba(59, 130, 246, 0.2);
        }

    /* No Members State */
    .no-members {
        text-align: center;
        padding: 3rem 1rem;
    }

    .no-members-icon {
        font-size: 3rem;
        color: var(--text-muted);
        margin-bottom: 1rem;
    }

    .no-members h5 {
        color: var(--text-primary);
        margin-bottom: 0.5rem;
    }

    .no-members p {
        color: var(--text-secondary);
        margin: 0 0 2rem 0;
    }

    /* Actions Grid */
    .actions-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
    }

    .action-btn {
        background: var(--background-light);
        border: 2px solid var(--border-color);
        border-radius: var(--radius-sm);
        padding: 1.5rem;
        display: flex;
        align-items: center;
        gap: 1rem;
        text-decoration: none;
        transition: all 0.3s ease;
        cursor: pointer;
    }

        .action-btn:hover:not(.disabled) {
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .action-btn.workspaces {
            border-color: var(--purple-color);
        }

            .action-btn.workspaces:hover {
                background: rgba(139, 92, 246, 0.05);
                border-color: var(--purple-hover);
            }

        .action-btn.edit {
            border-color: var(--warning-color);
        }

            .action-btn.edit:hover {
                background: rgba(245, 158, 11, 0.05);
                border-color: var(--warning-hover);
            }

        .action-btn.delete {
            border-color: var(--danger-color);
        }

            .action-btn.delete:hover {
                background: rgba(239, 68, 68, 0.05);
                border-color: var(--danger-hover);
            }

        .action-btn.disabled {
            opacity: 0.6;
            cursor: not-allowed;
            border-color: var(--text-muted);
        }

    .action-icon {
        width: 45px;
        height: 45px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 1.25rem;
        flex-shrink: 0;
    }

    .action-btn.workspaces .action-icon {
        background: var(--purple-color);
    }

    .action-btn.edit .action-icon {
        background: var(--warning-color);
    }

    .action-btn.delete .action-icon {
        background: var(--danger-color);
    }

    .action-btn.disabled .action-icon {
        background: var(--text-muted);
    }

    .action-content {
        flex: 1;
    }

        .action-content h6 {
            font-weight: 600;
            color: var(--text-primary);
            margin: 0 0 0.25rem 0;
            font-size: 1rem;
        }

        .action-content p {
            color: var(--text-secondary);
            margin: 0;
            font-size: 0.875rem;
        }

    /* Responsive Design */
    @@media (max-width: 768px) {
        .team-details-wrapper

    {
        padding: 1rem 0;
    }

    .header-content {
        flex-direction: column;
        align-items: flex-start;
    }

    .info-grid {
        grid-template-columns: 1fr;
    }

    .members-grid {
        grid-template-columns: 1fr;
    }

    .actions-grid {
        grid-template-columns: 1fr;
    }

    .details-title {
        font-size: 1.75rem;
    }

    .card-header {
        flex-direction: column;
        text-align: center;
        gap: 1rem;
    }

    .header-actions {
        width: 100%;
        display: flex;
        justify-content: center;
    }

    }

    @@media (max-width: 480px) {
        .card-body

    {
        padding: 1.5rem;
    }

    .member-card {
        flex-direction: column;
        text-align: center;
    }

    .action-btn {
        flex-direction: column;
        text-align: center;
    }

    }
</style>